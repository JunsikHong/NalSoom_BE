name: Deploy to GCP

on:
  push:
    branches:
      - master

env:
  PROJECT_NAME: 'nalsoom'
  PROJECT_VERSION: '0.0.1-SNAPSHOT'
  JAVA_VERSION: '17'
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Create application.yml
      run: |
        mkdir -p ./src/main/resources
        cat << EOF > ./src/main/resources/application.yml
        spring:
            datasource:
              url: ${{ secrets.DB_URL }}
              username: ${{ secrets.DB_USERNAME }}
              password: ${{ secrets.DB_PASSWORD }}
              driver-class-name: com.mysql.cj.jdbc.Driver
            
            jpa:
              database: mysql
                show-sql: false
                hibernate:
                  ddl-auto: none
                  naming:
                    physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
            
            server:
              port: 8080

            jasypt:
              encryptor:
                bean : jasyptEncryptor
                password : ${{ secrets.JASYPT_KEY }}
            
            custom:
              jwt:
                auth_header: Authorization
                token_type: Bearer 
                secret: ${{ secrets.JWT_KEY }}
                expiration_time: 86400000
                refresh_time: 8640000000

            seoul-data-key: ${{ secrets.SEOUL_DATA_KEY }}
            EOF
            
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/private_key
        chmod 600 ~/.ssh/private_key
        cat >> ~/.ssh/config << EOF
        Host gcp-instance
          HostName ${{ secrets.GCP_INSTANCE_IP }}
          User ${{ secrets.GCP_USERNAME }}
          IdentityFile ~/.ssh/private_key
          StrictHostKeyChecking no
        EOF
        
    - name: Deploy to GCP
      run: |
        # 현재 날짜시간으로 배포 폴더 생성
        DEPLOY_DIR="/home/${{ secrets.GCP_USERNAME }}/deploy/$(date +'%Y%m%d_%H%M%S')"
        
        # JAR 파일 전송 및 배포 스크립트 실행
        ssh gcp-instance "mkdir -p $DEPLOY_DIR"
        scp build/libs/*.jar gcp-instance:$DEPLOY_DIR/
        
        # 배포 스크립트 생성 및 실행
        ssh gcp-instance "cat > $DEPLOY_DIR/deploy.sh << 'EOF'
        
        # 이전 프로세스 종료
        CURRENT_PID="$(pgrep -f ${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}.jar)"
        if [ -n "${CURRENT_PID}" ]; then
          echo "현재 구동중인 애플리케이션 종료"
          kill "${CURRENT_PID}"
          sleep 5
        fi
        
        # 새로운 프로세스 시작
        JAR_NAME="${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}.jar"
        echo "새로운 애플리케이션 배포 시작: ${JAR_NAME}"
        nohup java -jar $JAR_NAME > nohup.out 2>&1 &
        
        echo "배포 완료"
        EOF

        ssh gcp-instance "cd $DEPLOY_DIR && chmod +x deploy.sh && ./deploy.sh"
